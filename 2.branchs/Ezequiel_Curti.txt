Teorica:

3.1.1) Un conflicto como tal no es algo bueno pero tampoco algo malo, solo es una aviso de parte de git indicando que al momento de realizar un merge ocurrio una sobreescritura de dos versiones del mismo archivo entre las 2 branch que se planean juntar.

3.1.2) La mejor forma de evitar un conflicto en git a la hora de realizar un merge es trabajar lo mas organizado posible, ya sea en grupo o con un proyecto en solitario, es recomendable ir actualizandolo o trabajar de forma independiente en ramas diferentes para evitar conflictos.

Practica:

Luego de hacer "git graph" estoy viendo una especie de historial (creeria que lo mismo que al usar el comando git log)

Luego de hacer "git graph" (despues de agregar anana a la pizza) el ultimo commit aparece arriba de todo

Luego de hacer "git graph" (despues de agregar cebolla a la pizza) el ultimo commit aparece arriba de todo, en este caso, seria el commit a pizza.txt despues
de agregar cebolla

Luego de hacer "git graph" (despues de volver a la branch "master") sigo viendo el mismo historial de commits. (tuve que commitear la branch master para hacer "git merge")

Luego de hacer "git branch --merged"" puedo ver que todos los cambios realizado en la branch "anana" ahora aparecen en "experimento"}

Luego de borrar las branchs "Anana" y "Experimento" no salen que estan "mergeadas" a la branch "master"

Luego de hacer "git graph" sigo viendo los cambios en los commits mas actualizados


